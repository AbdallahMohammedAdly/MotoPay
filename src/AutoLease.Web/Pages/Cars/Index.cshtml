@page
@model AutoLease.Web.Pages.Cars.IndexModel
@{
    ViewData["Title"] = "إدارة السيارات";
    var requestCulture = ViewContext.HttpContext.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();
    var currentCulture = requestCulture?.RequestCulture.Culture.Name ?? "en";
    var isRtl = currentCulture == "ar";
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --success-gradient: linear-gradient(135deg, #13f1fc 0%, #0470dc 100%);
            --warning-gradient: linear-gradient(135deg, #f9d423 0%, #ff4e50 100%);
            --bg-color: #f4f7fb;
            --card-color: #ffffff;
            --text-color: #0f1724;
            --muted-color: #98a3b3;
            --accent-color: #2b6df6;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: 'Cairo', system-ui, Segoe UI, Roboto, Arial, sans-serif;
        }

        .page-header {
            background: var(--primary-gradient);
            color: white;
            padding: 2rem 0;
            margin: -1.5rem -0.75rem 2rem;
            border-radius: 0 0 30px 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

            .page-header h1 {
                margin: 0;
                font-weight: 700;
            }

        .layout {
            display: grid;
            grid-template-columns: 320px 1fr;
            gap: 1.5rem;
        }

        .sidebar {
            background: var(--card-color);
            padding: 1.5rem;
            border-radius: 20px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
        }

            .sidebar:hover {
                box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
            }

        .filter-group {
            border-bottom: 1px dashed #eef3f8;
            padding: 1rem 0;
        }

            .filter-group:last-child {
                border-bottom: none;
            }

        .chip {
            padding: 0.5rem 1rem;
            border-radius: 50px;
            background: #eef1f5;
            border: 1px solid rgba(15, 23, 36, 0.03);
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 0.9rem;
        }

            .chip:hover {
                background-color: #dce1e7;
            }

            .chip.active {
                background: var(--accent-color);
                color: #fff;
                border-color: var(--accent-color);
            }

        .car-card-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 1.5rem;
        }

        .car-card {
            border: none;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .car-card:hover {
                transform: translateY(-10px);
                box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            }

            .car-card .card-img-top {
                height: 200px;
                object-fit: cover;
                width: 100%;
            }

            .car-card .card-body {
                padding: 1.5rem;
            }

        .price-display {
            font-size: 1.5rem;
            font-weight: bold;
            background: var(--success-gradient);
            -webkit-background-clip: inherit;
            -webkit-text-fill-color: transparent;
        }

        .status-badge {
            padding: 0.4rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
        }

        .status-available {
            background: #d4edda;
            color: #155724;
        }

        .status-sold {
            background: #f8d7da;
            color: #721c24;
        }

        .action-buttons a {
            padding: 0.5rem 1.2rem;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        .btn-gradient-primary{
            background: var(--primary-gradient);
            color: white;
            border: none;
        }

        .empty-state{
            padding: 4rem 2rem;
            text-align: center;
        }

        .form-control, .form-select{
            border-radius : 10px;
            border: 1px solid #ced4da;
       }

        .top-filters{
            background: var(--card-color);
            padding: 1rem;
            border-radius : 20px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            margin-bottom: 1.5rem;
        }

        @@media (max-width: 1000px){
            .layout {
                grid-template-columns: 1fr;
            }

            .sidebar {
                order: 2 ;
            } }
       
    </style>
          @* /* RTL Styles */ *@
    @if (isRtl)
    {
        <style>
            body{
                direction: rtl;
                text-align: right;
            }

            .page-header{
                text-align: right;
            }

            .action-buttons{
                direction: ltr;
            }

        </style>
    }

}

<div class="page-header">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center flex-column flex-md-row">
            <h1>إدارة السيارات</h1>
            @if (User.IsInRole("SalesAgent"))
            {
                <a asp-page="./Create" class="btn btn-lg btn-gradient-primary mt-3 mt-md-0">
                    <i class="fas fa-plus"></i> إضافة سيارة جديدة
                </a>
            }
        </div>
    </div>
</div>

<div id="popup-container"></div>

<div class="container mt-4">
    <div class="top-filters">
        <div class="d-flex flex-wrap gap-2 align-items-center mb-3">
            <span class="text-muted fw-bold me-2">فلتر حسب الماركة:</span>
            <span class="chip @(string.IsNullOrEmpty(Model.Make) ? "active" : "")" data-filter-name="make" data-filter-value="">الكل</span>
            @foreach (var make in Model.AvailableMakes)
            {
                <span class="chip @(make == Model.Make ? "active" : "")" data-filter-name="make" data-filter-value="@make">@make</span>
            }
        </div>

        <div class="d-flex flex-wrap gap-2 align-items-center">
            <span class="text-muted fw-bold me-2">الحالة:</span>
            <span class="chip @(Model.IsAvailable == null ? "active" : "")" data-filter-name="isAvailable" data-filter-value="">الكل</span>
            <span class="chip @(Model.IsAvailable == true ? "active" : "")" data-filter-name="isAvailable" data-filter-value="true">متاحة</span>
            <span class="chip @(Model.IsAvailable == false ? "active" : "")" data-filter-name="isAvailable" data-filter-value="false">مباعة</span>
        </div>
    </div>

    <div class="layout">
        <aside class="sidebar">
            <form method="get" id="filterForm" class="d-flex flex-column h-100">
                <input type="hidden" name="pageNumber" value="@Model.Cars.PageNumber" />
                <h4 class="mb-3">الفلاتر المتقدمة</h4>
                <div class="filter-group">
                    <label for="searchTerm" class="form-label">بحث</label>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" value="@Model.SearchTerm" placeholder="الماركة، الموديل، VIN...">
                </div>

                <div class="filter-group">
                    <label for="make" class="form-label">الماركة</label>
                    <select class="form-select" id="make" name="make">
                        <option value="">كل الماركات</option>
                        @foreach (var make in Model.AvailableMakes)
                        {
                            <option value="@make" selected="@(make == Model.Make)">@make</option>
                        }
                    </select>
                </div>

                <div class="filter-group">
                    <label for="minPrice" class="form-label">السعر</label>
                    <div class="d-flex gap-2">
                        <input type="number" class="form-control" id="minPrice" name="minPrice" value="@Model.MinPrice" placeholder="الحد الأدنى">
                        <input type="number" class="form-control" id="maxPrice" name="maxPrice" value="@Model.MaxPrice" placeholder="الحد الأعلى">
                    </div>
              
                </div>

                <div class="filter-group">
                    <label for="isAvailable" class="form-label">الحالة</label>
                    <select class="form-select" id="isAvailable" name="isAvailable">
                        <option value="">الكل</option>
                        <option value="true" selected="@(Model.IsAvailable == true)">متاحة للبيع</option>
                        <option value="false" selected="@(Model.IsAvailable == false)">مباعة</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="sortBy" class="form-label">الفرز حسب</label>
                    <select class="form-select" id="sortBy" name="sortBy">
                        <option value="CreatedAt" selected="@(Model.SortBy == "CreatedAt")">التاريخ الأحدث</option>
                        <option value="PriceAsc" selected="@(Model.SortBy == "PriceAsc")">السعر: من الأقل للأعلى</option>
                        <option value="PriceDesc" selected="@(Model.SortBy == "PriceDesc")">السعر: من الأعلى للأقل</option>
                    </select>
                </div>
                <div class="mt-auto pt-3 border-top">
                    <button type="submit" class="btn btn-primary w-100">تطبيق الفلاتر</button>
                </div>
            </form>
        </aside>

        <main>
            @if (Model.Cars.TotalCount > 0)
            {
                <div class="results-summary d-flex justify-content-between align-items-center mb-4 p-3 rounded-pill" style="background: white; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
                    <div class="text-muted">
                        عرض @Model.Cars.StartIndex - @Model.Cars.EndIndex من أصل @Model.Cars.TotalCount سيارة
                    </div>
                </div>

                <div class="car-card-grid">
                    @foreach (var car in Model.Cars.Items)
                    {
                        <div class="card car-card">
                            @if (!string.IsNullOrEmpty(car.ImageUrl))
                            {
                                <img src="@car.ImageUrl" class="card-img-top" alt="@car.DisplayName" loading="lazy">
                            }
                            else
                            {
                                <div class="card-img-top d-flex align-items-center justify-content-center bg-light" style="height: 200px;">
                                    <i class="fas fa-car fa-3x text-muted"></i>
                                </div>
                            }
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h5 class="card-title mb-0">@car.DisplayName</h5>
                                    @if (car.IsAvailable)
                                    {
                                        <span class="status-badge status-available">متاحة</span>
                                    }
                                    else
                                    {
                                        <span class="status-badge status-sold">مباعة</span>
                                    }
                                </div>
                                <div class="meta text-muted small mb-2">
                                    <span>اللون: @car.Color</span>
                                    <span>•</span>
                                    <span>السنة: @car.Year</span>
                                </div>
                                <p class="card-text text-muted small mb-3">@car.Description.Substring(0, Math.Min(car.Description.Length, 100))@(car.Description.Length > 100 ? "..." : "")</p>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <strong>السعر:</strong>
                                    <span class="price-display">@car.Price.ToString("C0")</span>
                                </div>
                                <div class="action-buttons d-flex gap-2">
                                    <a asp-page="./Details" asp-route-id="@car.Id" class="btn btn-gradient-primary flex-grow-1">
                                        <i class="fas fa-eye"></i> التفاصيل
                                    </a>
                                    @if (User.IsInRole("SalesAgent"))
                                    {
                                        <a asp-page="./Edit" asp-route-id="@car.Id" class="btn btn-outline-secondary">
                                            <i class="fas fa-edit"></i> تعديل
                                        </a>
                                        <a asp-page="./Delete" asp-route-id="@car.Id" class="btn btn-outline-danger">
                                            <i class="fas fa-trash"></i> حذف
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                
                    }
                </div>

              
                @if (Model.Cars.TotalPages > 1)
                {
                    <nav aria-label="Cars pagination" class="mt-4">
                        <ul class="pagination justify-content-center">
                            @if (Model.Cars.HasPreviousPage)
                            {
                                <li class="page-item"><a class="page-link" href="@Model.GetPageUrl(1)">الأول</a></li>
                                <li class="page-item"><a class="page-link" href="@Model.GetPageUrl(Model.Cars.PageNumber - 1)">السابق</a></li>
                            }
                          
                            @for (int i = Math.Max(1, Model.Cars.PageNumber - 2); i <= Math.Min(Model.Cars.TotalPages, Model.Cars.PageNumber + 2); i++)
                            {
                                <li class="page-item @(i == Model.Cars.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Model.GetPageUrl(i)">@i</a>
                                </li>
                            }
                        
                            @if (Model.Cars.HasNextPage)
                            {
                                <li class="page-item"><a class="page-link" href="@Model.GetPageUrl(Model.Cars.PageNumber + 1)">التالي</a></li>
                                <li class="page-item"><a class="page-link" href="@Model.GetPageUrl(Model.Cars.TotalPages)">الأخير</a></li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-car fa-3x mb-3"></i>
                    <h3>لا توجد سيارات مطابقة</h3>
                    <p>جرب تغيير معايير البحث أو <a asp-page="./Index">إعادة تعيين الفلاتر</a>.</p>
                    @if (User.IsInRole("SalesAgent"))
                    {
                        <a asp-page="./Create" class="btn btn-gradient-primary mt-3">
                            <i class="fas fa-plus"></i> إضافة سيارة جديدة
                        </a>
                    }
   
                </div>
            }
        </main>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get the form element
            const filterForm = document.getElementById('filterForm');

            // Get all filter input and select elements
            const filterInputs = filterForm.querySelectorAll('input, select');

            // Add event listeners to trigger form submission
            filterInputs.forEach(input => {
                input.addEventListener('change', function () {
                    // Reset page number to 1 on filter change
                    filterForm.querySelector('input[name="pageNumber"]').value = 1;
                    filterForm.submit();
                });

                // For text inputs, use keyup with a small delay for better performance
                if (input.type === 'text' || input.type === 'number') {
                    let timeout = null;
                    input.addEventListener('keyup', function () {
                        clearTimeout(timeout);
                        timeout = setTimeout(function () {
                            filterForm.querySelector('input[name="pageNumber"]').value = 1;
                            filterForm.submit();
                        }, 500); // 500ms delay
                    });
                }
            });

            // Handle chip clicks for top filters
            const chips = document.querySelectorAll('.chip[data-filter-name]');
            chips.forEach(chip => {
                chip.addEventListener('click', function () {
                    const filterName = this.getAttribute('data-filter-name');
                    const filterValue = this.getAttribute('data-filter-value');

                    // Update the corresponding form element
                    const formElement = filterForm.querySelector(`[name="${filterName}"]`);
                    if (formElement) {
                        formElement.value = filterValue;
                        filterForm.submit();
                    }
                });
            });
        });
    </script>
}
