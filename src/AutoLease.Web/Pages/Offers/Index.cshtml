@page
@model AutoLease.Web.Pages.Offers.IndexModel
@{
    ViewData["Title"] = "Special Offers";
}

<div class="hero-section bg-gradient-primary text-white py-5 mb-4 rounded">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1 class="display-4 fw-bold mb-3">
                    <i class="fas fa-fire text-warning"></i> Hot Deals & Special Offers
                </h1>
                <p class="lead mb-4">Discover amazing discounts on premium vehicles. Limited time offers with exclusive savings!</p>
                <div class="d-flex gap-3 mb-3">
                    <div class="bg-white bg-opacity-25 rounded px-3 py-2">
                        <i class="fas fa-percentage text-warning"></i>
                        <strong>Up to 30% OFF</strong>
                    </div>
                    <div class="bg-white bg-opacity-25 rounded px-3 py-2">
                        <i class="fas fa-clock text-warning"></i>
                        <strong>Limited Time</strong>
                    </div>
                    <div class="bg-white bg-opacity-25 rounded px-3 py-2">
                        <i class="fas fa-car text-warning"></i>
                        <strong>Premium Vehicles</strong>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 text-center">
                <i class="fas fa-tags fa-8x text-warning opacity-75"></i>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="card shadow-sm border-0 mb-4">
    <div class="card-header bg-white border-0">
        <h5 class="mb-0">
            <button class="btn btn-link text-decoration-none p-0 fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                <i class="fas fa-search text-primary"></i> Find Your Perfect Deal
            </button>
        </h5>
    </div>
    <div id="filterCollapse" class="collapse @(Model.HasActiveFilters ? "show" : "")">
        <div class="card-body bg-light">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="searchTerm" class="form-label fw-bold">
                        <i class="fas fa-search text-primary"></i> Search Offers
                    </label>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Search by title, car make, model...">
                </div>
                
                <div class="col-md-2">
                    <label for="minDiscount" class="form-label fw-bold">
                        <i class="fas fa-percentage text-success"></i> Min Discount %
                    </label>
                    <select class="form-select" id="minDiscount" name="minDiscount">
                        <option value="">Any Discount</option>
                        <option value="10" selected="@(Model.MinDiscount == 10)">10% or more</option>
                        <option value="20" selected="@(Model.MinDiscount == 20)">20% or more</option>
                        <option value="30" selected="@(Model.MinDiscount == 30)">30% or more</option>
                        <option value="40" selected="@(Model.MinDiscount == 40)">40% or more</option>
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label for="maxPrice" class="form-label fw-bold">
                        <i class="fas fa-dollar-sign text-warning"></i> Max Price
                    </label>
                    <select class="form-select" id="maxPrice" name="maxPrice">
                        <option value="">Any Price</option>
                        <option value="20000" selected="@(Model.MaxPrice == 20000)">Under $20K</option>
                        <option value="30000" selected="@(Model.MaxPrice == 30000)">Under $30K</option>
                        <option value="50000" selected="@(Model.MaxPrice == 50000)">Under $50K</option>
                        <option value="75000" selected="@(Model.MaxPrice == 75000)">Under $75K</option>
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label for="isActive" class="form-label fw-bold">
                        <i class="fas fa-clock text-info"></i> Status
                    </label>
                    <select class="form-select" id="isActive" name="isActive">
                        <option value="">All Offers</option>
                        <option value="true" selected="@(Model.IsActive == true)">Active Only</option>
                        <option value="false" selected="@(Model.IsActive == false)">Expired</option>
                    </select>
                </div>
                
                <div class="col-md-2 d-flex align-items-end">
                    <div class="btn-group w-100" role="group">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i> Search
                        </button>
                        <a asp-page="./Index" class="btn btn-outline-secondary">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Results Summary and Sort -->
@if (Model.Offers.TotalCount > 0)
{
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="text-primary mb-1">
                <i class="fas fa-tags"></i> @Model.Offers.TotalCount Special Offers Found
            </h4>
            <p class="text-muted mb-0">
                Showing @Model.Offers.StartIndex - @Model.Offers.EndIndex of @Model.Offers.TotalCount offers
            </p>
        </div>
        <div class="dropdown">
            <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                <i class="fas fa-sort"></i> Sort: @Model.GetSortDisplayName()
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="@Model.GetSortUrl("DiscountPercentage")">
                    <i class="fas fa-percentage"></i> Highest Discount
                </a></li>
                <li><a class="dropdown-item" href="@Model.GetSortUrl("DiscountedPrice")">
                    <i class="fas fa-dollar-sign"></i> Lowest Price
                </a></li>
                <li><a class="dropdown-item" href="@Model.GetSortUrl("EndDate")">
                    <i class="fas fa-clock"></i> Ending Soon
                </a></li>
                <li><a class="dropdown-item" href="@Model.GetSortUrl("CreatedAt")">
                    <i class="fas fa-calendar"></i> Newest First
                </a></li>
            </ul>
        </div>
    </div>

    <!-- Offers Grid -->
    <div class="row">
        @foreach (var offer in Model.Offers.Items)
        {
            <div class="col-xl-4 col-lg-6 mb-4">
                <div class="card h-100 shadow-hover border-0 position-relative offer-card">
                    <!-- Discount Badge -->
                    <div class="position-absolute top-0 start-0 m-3" style="z-index: 10;">
                        <span class="badge bg-danger fs-6 px-3 py-2 rounded-pill shadow">
                            <i class="fas fa-fire"></i> @offer.DiscountLabel
                        </span>
                    </div>
                    
                    <!-- Status Badge -->
                    <div class="position-absolute top-0 end-0 m-3" style="z-index: 10;">
                        @{
                            var statusClass = offer.StatusBadge switch
                            {
                                "Active" => "bg-success",
                                "Expired" => "bg-secondary",
                                "Coming Soon" => "bg-info",
                                "Sold Out" => "bg-warning text-dark",
                                _ => "bg-light text-dark"
                            };
                        }
                        <span class="badge @statusClass shadow">
                            @offer.StatusBadge
                        </span>
                    </div>

                    <div class="card-body p-4">
                        <!-- Offer Title -->
                        <h5 class="card-title fw-bold text-primary mb-2">@offer.Title</h5>
                        
                        <!-- Car Information -->
                        @if (offer.Car != null)
                        {
                            <div class="mb-3">
                                <h6 class="text-dark mb-1">
                                    <i class="fas fa-car text-muted"></i> @offer.Car.DisplayName
                                </h6>
                                <small class="text-muted">@offer.Car.Color â€¢ VIN: @offer.Car.VinNumber.Substring(offer.Car.VinNumber.Length - 6)</small>
                            </div>
                        }

                        <!-- Pricing -->
                        <div class="pricing-section mb-3">
                            <div class="d-flex align-items-center gap-3">
                                <div class="original-price">
                                    <small class="text-muted text-decoration-line-through">@offer.OriginalPrice.ToString("C")</small>
                                </div>
                                <div class="discounted-price">
                                    <h4 class="text-success fw-bold mb-0">@offer.DiscountedPrice.ToString("C")</h4>
                                </div>
                            </div>
                            <div class="savings text-success fw-bold">
                                <i class="fas fa-piggy-bank"></i> Save @offer.Savings.ToString("C")
                            </div>
                        </div>

                        <!-- Description -->
                        <p class="card-text text-muted small mb-3">
                            @(offer.Description.Length > 100 ? offer.Description.Substring(0, 100) + "..." : offer.Description)
                        </p>

                        <!-- Offer Details -->
                        <div class="offer-details mb-3">
                            <div class="row text-sm">
                                <div class="col-6">
                                    <i class="fas fa-calendar-alt text-primary"></i>
                                    <strong>Ends:</strong><br>
                                    <small>@offer.EndDate.ToString("MMM dd, yyyy")</small>
                                </div>
                                <div class="col-6">
                                    <i class="fas fa-users text-info"></i>
                                    <strong>Slots:</strong><br>
                                    <small>@offer.RemainingSlots of @offer.MaxApplications left</small>
                                </div>
                            </div>
                        </div>

                        <!-- Time Remaining -->
                        <div class="time-remaining mb-3">
                            <div class="progress" style="height: 6px;">
                                @{
                                    var timeProgress = offer.IsExpired ? 100 : 
                                        Math.Min(100, (DateTime.UtcNow - offer.StartDate).TotalDays / 
                                        Math.Max(1, (offer.EndDate - offer.StartDate).TotalDays) * 100);
                                }
                                <div class="progress-bar bg-warning" style="width: @timeProgress%"></div>
                            </div>
                            <small class="text-muted">
                                <i class="fas fa-clock"></i> @offer.TimeRemaining
                            </small>
                        </div>

                        <!-- Sales Agent -->
                        @if (offer.SalesAgent != null)
                        {
                            <div class="sales-agent mb-3">
                                <small class="text-muted">
                                    <i class="fas fa-user-tie"></i> Contact: @offer.SalesAgent.FullName
                                </small>
                            </div>
                        }
                    </div>

                    <!-- Action Buttons -->
                    <div class="card-footer bg-transparent border-0 p-4 pt-0">
                        <div class="d-grid gap-2">
                            @if (User.IsInRole("Client") && offer.CanApply)
                            {
                                <button class="btn btn-success btn-lg fw-bold apply-btn" 
                                        data-offer-id="@offer.Id" 
                                        data-offer-title="@offer.Title">
                                    <i class="fas fa-shopping-cart"></i> Apply for This Offer
                                </button>
                                <button class="btn btn-outline-primary interest-btn" 
                                        data-offer-id="@offer.Id">
                                    <i class="fas fa-heart"></i> Show Interest
                                </button>
                            }
                            else if (User.IsInRole("SalesAgent"))
                            {
                                <a asp-page="./Edit" asp-route-id="@offer.Id" class="btn btn-warning">
                                    <i class="fas fa-edit"></i> Edit Offer
                                </a>
                            }
                            else if (!offer.CanApply)
                            {
                                <button class="btn btn-secondary" disabled>
                                    <i class="fas fa-times-circle"></i> 
                                    @(offer.IsExpired ? "Expired" : offer.RemainingSlots <= 0 ? "Sold Out" : "Not Available")
                                </button>
                            }
                            
                            <a asp-page="./Details" asp-route-id="@offer.Id" class="btn btn-outline-info">
                                <i class="fas fa-info-circle"></i> View Details
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.Offers.TotalPages > 1)
    {
        <nav aria-label="Offers pagination" class="mt-5">
            <ul class="pagination justify-content-center pagination-lg">
                @if (Model.Offers.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Model.GetPageUrl(1)">
                            <i class="fas fa-angle-double-left"></i> First
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Model.GetPageUrl(Model.Offers.PageNumber - 1)">
                            <i class="fas fa-angle-left"></i> Previous
                        </a>
                    </li>
                }

                @for (int i = Math.Max(1, Model.Offers.PageNumber - 2); i <= Math.Min(Model.Offers.TotalPages, Model.Offers.PageNumber + 2); i++)
                {
                    <li class="page-item @(i == Model.Offers.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Model.GetPageUrl(i)">@i</a>
                    </li>
                }

                @if (Model.Offers.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Model.GetPageUrl(Model.Offers.PageNumber + 1)">
                            Next <i class="fas fa-angle-right"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Model.GetPageUrl(Model.Offers.TotalPages)">
                            Last <i class="fas fa-angle-double-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-tags fa-4x text-muted mb-4"></i>
        <h3 class="text-muted">No Offers Found</h3>
        @if (Model.HasActiveFilters)
        {
            <p class="lead">Try adjusting your search criteria or <a asp-page="./Index" class="text-primary">view all offers</a>.</p>
        }
        else
        {
            <p class="lead">Check back soon for exciting new deals!</p>
            @if (User.IsInRole("SalesAgent"))
            {
                <a asp-page="./Create" class="btn btn-primary btn-lg mt-3">
                    <i class="fas fa-plus"></i> Create New Offer
                </a>
            }
        }
    </div>
}

<!-- Application Modal -->
<div class="modal fade" id="applyModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">
                    <i class="fas fa-shopping-cart"></i> Apply for Offer
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="applicationForm">
                    <input type="hidden" id="offerId" name="offerId">
                    <div class="mb-3">
                        <label for="applicationNotes" class="form-label">Additional Notes (Optional)</label>
                        <textarea id="applicationNotes" name="notes" class="form-control" rows="3" 
                                placeholder="Any additional information or special requests..."></textarea>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="termsAgree" required>
                        <label class="form-check-label" for="termsAgree">
                            I agree to the <a href="#" class="text-primary">terms and conditions</a> of this offer
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="submitApplication">
                    <i class="fas fa-paper-plane"></i> Submit Application
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .shadow-hover {
            transition: all 0.3s ease;
        }
        
        .shadow-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15) !important;
        }
        
        .offer-card {
            border-radius: 15px;
            overflow: hidden;
        }
        
        .pricing-section {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 10px;
            padding: 15px;
        }
        
        .apply-btn {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border: none;
            border-radius: 25px;
            transition: all 0.3s ease;
        }
        
        .apply-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
        }
        
        .interest-btn:hover {
            background-color: #0d6efd;
            color: white;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Apply button functionality
            document.querySelectorAll('.apply-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const offerId = this.dataset.offerId;
                    const offerTitle = this.dataset.offerTitle;
                    
                    document.getElementById('offerId').value = offerId;
                    document.querySelector('#applyModal .modal-title').innerHTML = 
                        `<i class="fas fa-shopping-cart"></i> Apply for: ${offerTitle}`;
                    
                    new bootstrap.Modal(document.getElementById('applyModal')).show();
                });
            });
            
            // Interest button functionality
            document.querySelectorAll('.interest-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const offerId = this.dataset.offerId;
                    
                    // Show interest - could be implemented with AJAX
                    this.innerHTML = '<i class="fas fa-heart text-danger"></i> Interested!';
                    this.classList.remove('btn-outline-primary');
                    this.classList.add('btn-outline-success');
                    this.disabled = true;
                    
                    // TODO: Send AJAX request to record interest
                    console.log('Showing interest in offer:', offerId);
                });
            });
            
            // Submit application
            document.getElementById('submitApplication').addEventListener('click', function() {
                const form = document.getElementById('applicationForm');
                const formData = new FormData(form);
                
                // TODO: Implement AJAX submission
                console.log('Submitting application:', Object.fromEntries(formData));
                
                // For now, just close modal and show success message
                bootstrap.Modal.getInstance(document.getElementById('applyModal')).hide();
                
                // Show success toast
                const toast = document.createElement('div');
                toast.className = 'toast align-items-center text-white bg-success border-0';
                toast.setAttribute('role', 'alert');
                toast.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="fas fa-check-circle"></i> Application submitted successfully!
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                `;
                
                document.body.appendChild(toast);
                new bootstrap.Toast(toast).show();
                
                setTimeout(() => toast.remove(), 5000);
            });
        });
    </script>
}